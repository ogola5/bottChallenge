{"ast":null,"code":"import _toConsumableArray from \"/home/ogola/Desktop/codeChallenge/Phase-2-Hooks-Code-Challenge-Bot-Battlr-100421/code-challenge/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/ogola/Desktop/codeChallenge/Phase-2-Hooks-Code-Challenge-Bot-Battlr-100421/code-challenge/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ogola/Desktop/codeChallenge/Phase-2-Hooks-Code-Challenge-Bot-Battlr-100421/code-challenge/src/components/BotsPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nfunction BotsPage() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      bots = _useState2[0],\n      setBots = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      myBot = _useState4[0],\n      setMyBot = _useState4[1];\n\n  useEffect(function () {\n    fetch(\"http://localhost:8002/bots\").then(function (res) {\n      return res.json();\n    }).then(setBots);\n  }, []);\n\n  function enlistBot(bot) {\n    var selectedBot = myBot.find(function (boty) {\n      return boty.id === bot.id;\n    });\n\n    if (!selectedBot) {\n      setMyBot(function (bots) {\n        return [].concat(_toConsumableArray(bots), [bot]);\n      });\n    }\n  }\n\n  function removeBot(bot) {\n    var filterRemove = myBot.filter(function (b) {\n      return b.id !== bot.id;\n    });\n    setMyBot(filterRemove);\n  }\n\n  function deleteBot(bot) {\n    var filterbots = bots.filter(function (singlebot) {\n      return singlebot.id !== bot.id;\n    });\n    var deleteConfig = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"http://localhost:8002/bots/\".concat(bot.id), deleteConfig).then(function () {\n      return setBots(filterbots);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(YourBotArmy, {\n    bots: myBot,\n    removeBot: removeBot,\n    deleteBot: deleteBot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BotCollection, {\n    bots: bots,\n    enlistBot: enlistBot,\n    deleteBot: deleteBot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default BotsPage;\n;","map":{"version":3,"names":["React","useState","useEffect","YourBotArmy","BotCollection","BotsPage","bots","setBots","myBot","setMyBot","fetch","then","res","json","enlistBot","bot","selectedBot","find","boty","id","removeBot","filterRemove","filter","b","deleteBot","filterbots","singlebot","deleteConfig","method","headers"],"sources":["/home/ogola/Desktop/codeChallenge/Phase-2-Hooks-Code-Challenge-Bot-Battlr-100421/code-challenge/src/components/BotsPage.js"],"sourcesContent":["import React, { useState , useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\n \n\nfunction BotsPage() {\n  \n\n  const [bots, setBots] = useState([]);\n  const [myBot,setMyBot] = useState([])\n\n  useEffect(() => {\n    fetch(\"http://localhost:8002/bots\")\n    .then(res => res.json())\n    .then(setBots)\n  },[])\n\n  function enlistBot(bot){\n    const selectedBot = myBot.find((boty)=>boty.id === bot.id)  \n    if (!selectedBot){\n     setMyBot(bots=>[...bots,bot])\n    }   \n  }\n\n  function removeBot(bot){\n    const filterRemove = myBot.filter((b)=>b.id !== bot.id)\n    setMyBot(filterRemove)\n  }\n\n  function deleteBot(bot){  \n    const filterbots = bots.filter((singlebot) => singlebot.id !==  bot.id);\n    const   deleteConfig =  {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          } \n    }\n    fetch(`http://localhost:8002/bots/${bot.id}`,deleteConfig)\n      .then(()=>setBots(filterbots))   \n  }\n\n  return (\n    <div>\n      <YourBotArmy \n      bots={myBot}\n      removeBot ={removeBot}\n      deleteBot={deleteBot}\n      />\n\n      <BotCollection \n      bots={bots}\n      enlistBot={enlistBot}\n      deleteBot={deleteBot}\n      />\n    </div>\n  )\n}\n\nexport default BotsPage;;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAIA,SAASC,QAAT,GAAoB;EAAA,gBAGMJ,QAAQ,CAAC,EAAD,CAHd;EAAA;EAAA,IAGXK,IAHW;EAAA,IAGLC,OAHK;;EAAA,iBAION,QAAQ,CAAC,EAAD,CAJf;EAAA;EAAA,IAIXO,KAJW;EAAA,IAILC,QAJK;;EAMlBP,SAAS,CAAC,YAAM;IACdQ,KAAK,CAAC,4BAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;MAAA,OAAIA,GAAG,CAACC,IAAJ,EAAJ;IAAA,CADT,EAECF,IAFD,CAEMJ,OAFN;EAGD,CAJQ,EAIP,EAJO,CAAT;;EAMA,SAASO,SAAT,CAAmBC,GAAnB,EAAuB;IACrB,IAAMC,WAAW,GAAGR,KAAK,CAACS,IAAN,CAAW,UAACC,IAAD;MAAA,OAAQA,IAAI,CAACC,EAAL,KAAYJ,GAAG,CAACI,EAAxB;IAAA,CAAX,CAApB;;IACA,IAAI,CAACH,WAAL,EAAiB;MAChBP,QAAQ,CAAC,UAAAH,IAAI;QAAA,oCAAMA,IAAN,IAAWS,GAAX;MAAA,CAAL,CAAR;IACA;EACF;;EAED,SAASK,SAAT,CAAmBL,GAAnB,EAAuB;IACrB,IAAMM,YAAY,GAAGb,KAAK,CAACc,MAAN,CAAa,UAACC,CAAD;MAAA,OAAKA,CAAC,CAACJ,EAAF,KAASJ,GAAG,CAACI,EAAlB;IAAA,CAAb,CAArB;IACAV,QAAQ,CAACY,YAAD,CAAR;EACD;;EAED,SAASG,SAAT,CAAmBT,GAAnB,EAAuB;IACrB,IAAMU,UAAU,GAAGnB,IAAI,CAACgB,MAAL,CAAY,UAACI,SAAD;MAAA,OAAeA,SAAS,CAACP,EAAV,KAAkBJ,GAAG,CAACI,EAArC;IAAA,CAAZ,CAAnB;IACA,IAAQQ,YAAY,GAAI;MAClBC,MAAM,EAAE,QADU;MAElBC,OAAO,EAAE;QACP,gBAAgB;MADT;IAFS,CAAxB;IAMAnB,KAAK,sCAA+BK,GAAG,CAACI,EAAnC,GAAwCQ,YAAxC,CAAL,CACGhB,IADH,CACQ;MAAA,OAAIJ,OAAO,CAACkB,UAAD,CAAX;IAAA,CADR;EAED;;EAED,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,WAAD;IACA,IAAI,EAAEjB,KADN;IAEA,SAAS,EAAGY,SAFZ;IAGA,SAAS,EAAEI,SAHX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAOE,oBAAC,aAAD;IACA,IAAI,EAAElB,IADN;IAEA,SAAS,EAAEQ,SAFX;IAGA,SAAS,EAAEU,SAHX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAPF,CADF;AAeD;;AAED,eAAenB,QAAf;AAAwB"},"metadata":{},"sourceType":"module"}